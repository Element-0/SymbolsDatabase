name: Generator
env:
  bdsd_tag: "%F0%9F%A7%AD"
  bds_version: 1.16.201.02
on:
  push:
jobs:
  generate:
    runs-on: windows-latest
    steps:
      - name: Download bdsd
        run: |
          $tmp = New-TemporaryFile | Rename-Item -NewName { $_ -replace 'tmp$', 'zip' } –PassThru
          $url = "https://github.com/codehz/BDSD/releases/download/${{ env.bdsd_tag }}/default.zip"
          Invoke-WebRequest -OutFile $tmp $url
          $tmp | Expand-Archive -DestinationPath ${{ runner.tool_cache }}\bdsd
          Write-Output "${{ runner.tool_cache }}\bdsd" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Download BDS
        run: |
          function Get-BDS ($OS, $Version) {
            Write-Output "::group::Downloading for $OS (version: $Version)"
            $tmp = New-TemporaryFile | Rename-Item -NewName { $_ -replace 'tmp$', 'zip' } –PassThru
            $url = "https://minecraft.azureedge.net/bin-$OS/bedrock-server-$Version.zip"
            Invoke-WebRequest -OutFile $tmp $url
            Write-Output "::endgroup::"
            Write-Output "::group::Extracting for $OS (version: $Version)"
            $tmp | Expand-Archive -DestinationPath $OS
            Write-Output "::endgroup::"
          }
          Get-BDS -OS win -Version ${{ env.bds_version }}
          Get-BDS -OS linux -Version ${{ env.bds_version }}
      - name: Generate database
        run: |
          symutils build-database bedrock_server.bds-dump win\bedrock_server.pdb linux\bedrock_server
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: dump
          path: bedrock_server.bds-dump
      - name: Get timestamp
        id: get-tag
        run: |
          $timestamp = Get-Date -AsUTC -Format o | ForEach-Object { $_ -replace ":", "." }
          echo "::set-output name=tag::${{ env.bds_version }}-$timestamp"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-tag.outputs.tag }}
          release_name: Release ${{ env.bds_version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bedrock_server.bds-dump
          asset_name: bedrock_server.bds-dump
          asset_content_type: application/vnd.sqlite3
      - name: Upload SymbolTokenizer.dll
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.tool_cache }}/bdsd/SymbolTokenizer.dll
          asset_name: tokenizer.dll
          asset_content_type: application/octet-stream